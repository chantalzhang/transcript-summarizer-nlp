{
    "Topic 1": [
        ". Is that how this works is that each lexical item. ? And then we're also going to talk about quantifiers. we're gonna look at how in logic you have these universal and existential quantifiers, and how we can use them to model quantifiers and natural language. and  there are. there's some. Something. ,  you remember we're building this logical representation in order to say, access some database, or make some inferences to say , did something happen? Or did something not happen, and who was involved or whatever . This is to build some meaning representation in order to be able to do some inferences. . You you always have . If you have. . There is. and then it exists. and you can talk about it, and you can talk about its properties. You can talk about when it happened, and or will it happen? when you say there exists E, it means that there's some you're saying that there exists some discourse entity. . and you can also add information to the event variable about  a tense and modality  when it happened, or will something likely happen? . . ? don't get freaked out by all of these symbols. and it looks scary. it's . Because for the direct object, you have something  Vp rewrites to Vnp. you need a semantic attachment associated with that which is that we have the. That's what this says. ? After that. and  the order of the variables. ? the question is, does it matter? That does matter. that does matter, and that you cannot exchange. . . ,  how about? And then we'll see how it simplifies. . And  for Vp rewrites to Vnp. and do I do the simplification? Yes, I do the simplification here. You. and then you put it there where the Y is. . . then how does it get turned into? I didn't want to put X here because it might get confused with this X.  I just renamed it? But you're , you're you're allowed to do that. and the and they're they're . . Why? . why is it being substituted for  and , why aren't we looking for it as ? There are only 2 chunks. ? That's . . what's ? X. Student X implies,  x. Comp. 550. But here, I just for the sake of clarity, I just switch back to  the simpler predicates way of expressing events. . But ? ? X student X implies something. And then there are also existential quantifiers. when we do model indefinite articles and also quantifiers  sum is that some student, a student, likes comp. 550 is expressed by an existential quantifier. There exists in x. Such that X is a student, and then X likes comp. 550. ? If you have  can. Can. I'm hoping you've seen this  . . that's . What it means is that it's asserting that everything is a student, and everything likes Comp. What about ? There exists an X. Such student X implies X likes. . It's the same. . of course. . , , that's . There. If you add extra parentheses and you replace this with an end, it still doesn't work. . . You need both to apply. there's some something that is both a student. for our purposes, , I'm gonna skip to the lexical rules and then come back to talk about definiteness. . this can be every. you have a determiner and then rewrites to the lexical item every or all. Q. And this is quite interesting linguistically, which is definiteness,  the. Let's talk about definiteness as   that. . This is the question. which is, it's from Russell in 19 0, 5. ,  it's the Russell's theory of definite descriptions. when you say the student, as in the student took comp. And you're also asserting that the student participates in some predicate which here would be took comp. . ? the question is, if you have, the apple is in the yard, what happens? all 3 things still apply for the yard. It applies to the apple and applies to the yard. . because the yard is still participating in the predicate. It's just participating in a different position. It's not participating in the in  the semantic, I guess. Subject  position. It's just it's participating in  the , more  the place position. But it's still participating in that predicate. . then? But we can talk. . . ? There's at most one thing that is a student, and the student participates in this predicate. there exists in X, such that X is a student, that's property one. And it's a unique student. for all y student Y implies y equals x, that's property. 2, and took X, comp. 550. X took Comp. 550. And that's how you model the meaning of the student took Comp 550. . . . I would say that they probably do quite  in stringing together sentences that seem to use quantifiers correctly, in a grammatically fluent way. They might not reason   because they don't connect the information expressed about the student back to  when it's introduced. they don't keep, do  a perfect job and keeping track of how many entities have been introduced in our. explicitly . . . That's a student  you have to say that everything that's a student is the same as X.  , and that. ? . . But . Every student's. Every student likes. , . ? Q. Of x implies Q of x, and then, student, you can get from the previous slide. Q. Q for all. X student X implies. And . , but we can do this part together. ,  this is the syntactic part. Q. And then what was there exists. . Q. And what about for the ? almost not quite  the beginning. There exists an X such that p of x, and . all of that. exists. An x such that p of x. and for all. why. . Implies y equals x , P of y implies that y equals x and the predicates . something  exist with a exclamation mark. then, that's the simplification for this whole thing. It means that there's a there exists a unique X such that . he said that  it's exists a unique thing. that's that's this part. And if it's unique, that means everything else that has that predicate must be that thing. a becomes P. And Q. the A becomes. and if you want to get to a deeper level of explanation, then you should write out the truth tables for conjunction, and then check that this maps to your intuitive understanding of what it means to say that there exists a student who has this property? ? . If we want to say that there are smart students, then maybe they are lambda X, smart X and student X, that's the form that we want to get for a smart student. the question is, what is gonna be the rule for smart, the adjective smart. ? syntactically. syntactically, it will be something  adjective rewrites to smart. , this is the syntactic. my question is, what is the semantic attachment for that. something  a The. We have to . Go ahead just to say that there exists something that can be smart. . . . Something is. if we do this. then you get this. . it seems to make sense ,  a student can be smart, or they can be tall, or they can be short, or they can be young and old doesn't matter . Also  dead, maybe that where, , you cannot model them with  a conjunction  that. . Would order matter  a smart big student versus a fake smart student. a fake smarts. . it's . Go ahead. What else? You're on the  track. And you're on the  track. Fake by itself doesn't mean anything. You can say someone is very fake in the sense that they're not sincere. I don't mean that sense. the sense of  a fake student  it might be  someone pretending to be a student. , but they're not  a student. on its own. it's not , they're . with smart and student, the idea is that there are a set of things in the world that are smart. And there's a set of things in the world that are students, and a smart student is  at the intersection of them. Even that is  arguable, by the way. But , but for fake, this is clearly not the  way to model it, because it's not  there's a set of fake things in the world. You can. . it'll be something , they say they're a student. But they're not  a student, ? They say they're a student. But they're not  a student. . . But a fake student is also not just anything that is not a student. ? . Or if you talk about  Presidents and former Presidents, it's , maybe that's also another case that you can more clearly see. former Presidents are not all of the entities which are not currently Presidents ? . . I want to talk about another common property of natural language, involving modification that is interesting, and it involves quantifiers. which is a scope, ambiguity. what are the possible readings for the sentence, every student took a course. . it's either every student. any course we have one course on there program, or they, every student took one specific course. That's . can do you all get both readings is either every student took some course, a different course, or it can be. Every student took the same course. They they can outscope one another, and they. the 1st reading is for every students there exists a course such that they took it  here the universal quantifier outscopes the existential quantifier. Every student took a course. It would be the existential quantifier outscopes the universal quantifier. there exists, of course, y such that every student takes it. whereas the existential quantifier is in the object position, it's on the inside. ? or in general with all possible readings. and ideally, we would  that without having to explicitly enumerate all of them. you. maybe you saw the expression, every student took a course. And then, once you've read the entire syllabus, you can figure out intuitively, you can figure out  which was the intended interpretation. After you've read the whole syllabus, and then you can go back to retrieve and derive the corrects disambiguated meaning representation. ,  how does that work. we have. Every student took a course. They're free variables, ? because it's every student took a course. It's the existential. There exists a Y course Y, and that's associated with S. 2 with the second entry in your storage. , ? when I say, what does it mean to have some representation compatible with all possible readings without explicitly enumerating them. But this one. that's what . this is compatible with all possible readings. . And  the index variables here, the index indices here are important because they point to the things in the storage. ? what does that mean? and if we do the simplification. if you do the simplification, this lambda. Q. There. And then  it becomes for all. X. then you can then do the simplification. that's the process. , when you have a course. course still looks  what it does from before a still looks  what it did from before. and when you compose them syntactically. Of s. 1 which is associated with some entry in your storage of and inside. ,  I will, and I'll post this the answer to this on Ed. Of this."
    ],
    "Topic 2": [
        "we're in the setting of syntax-driven semantic composition. And last class, we started talking about the specifics of how this is done. and that when you do a syntactic composition by applying a rule in your context-free grammar. The syntax part is  you combine things to make a bigger syntactic chunk. And in our case it's 1st order logic. though by no means is this exhaustive. And then, when you do more syntactic composition, then you combine more pieces of meaning representation together, and then lambda calculus will help you figure out exactly how you should combine the pieces of meaning representation. And here's the syntax driven semantic composition  a rule that we have ? each context-free grammar rule is accompanied by some expression that tells you how to combine the meaning representations of the pieces. There are no direct objects. The events concept , is it  an action, or is it the representation of the verb  that 1st one was, I understand, the second one, and the 3rd one, when there will be but  in ruler. Variable thing? , that it's a bit difficult to wrap your head around. in order to be able to reason about something, you have to have some entity that exists that you can manipulate   in logic. this abstract idea that it's  a it's an entity. there always needs to be  event management where you just put it. there always needs to be some event variable every time you introduce a new events  ever essentially. And it's that it's it's of this type. why are we doing things that way? because then you can have optional elements,  locations and times and passive structures, and you can just all account for them in the same way by talking about properties of event variables. that's why we do this  complex thing of  of this is called reification, ? first, st we have to have a semantic attachment to the lexical rule. But conceptually, it's the same. and you apply it to the semantics of the direct object noun phrase. Rule is still there, and it's still the same. Let's remember what happens. first, st if you want, you can draw the entire syntax tree. The  step is to write down the semantic attachments for all of the lexical rules. W,  let's let's go through the derivation. The rule is that you take the verb semantics and the noun semantic noun phrase semantics, and you combine them together where the noun phrase semantics is the arguments. that's this thing. 5, 50 ends up in the  place and ends up in the place for the enjoy. the thing that is enjoyed, and that's what we were hoping for. Question, how do we go from lambda x dot x 5, 50 in the 1st line into lambda y dot y, is it because we're  switching in X dot x for y, or is that a typo? it's not a typo. It's because,  there's a there's a whole series of reasoning steps you can derive to show that this is the way that you need to make to make all the representations look more similar to each other in form and to have function application workout across multiple syntactic constructions. The the idea is, you understand, the concept of each lexical rule comes with a semantic attachment. 5, 50 is substituted for X, the way I'm reading it, I thought it would be substituted breeze. ,  you mean, why this chunk ends up here? It's not  there's 1 chunk, a second chunk, and a 3rd chunk. There's  one chunk here. and then there's a second chunk for this whole thing. , let's do quantifiers. Whereas here what we want is that we want only the students to  Comp. here this is a condition ? to express condition. Error. Why is that wrong? It's the correct flavor. No, no, that's the correct meaning, ? the correct meaning is, as long as there's a student who likes. , what about for the universal one? And they  convoluted 50 where the X is the same as the one outside,  you would enclose the inner part in brackets, forcing that X to be the same one as the student and them liking. the question , ,  are you talking about all students or some student. all students. for all students. It's still the same problem. the basic idea here is that for universal, it's usually a condition. it's a universal only for , according to some condition which here is  all the students, that's the condition for existential. And this can be all, it's the same thing. And  let's model. this is also historically interesting. how do we express the student in 1st order? Logic. Whoa! First, st you're asserting that there is an entity who is the student. and then you're asserting that there is at most one thing being referred to who is a student. ,  in this analysis, then in you can express all of this in 1st order logic. And let's do that? This would have the 3 properties enforced, but the yard wouldn't, because it's not followed by a predicate. This is  controversial. and then the 1st order, meaning representation. 1st order, logic, meaning representation, might be asserting something  bald King of France. then, rather than doing this, according to Bertrand Russell, then you should just the King of Francis Bald asserts that there is an entity that is the King of France. In the 1st place. And  the way that you do this is with this relatively complex formula in 1st order, logic. the question is when we say that there is at most one thing being referred to. , technically, this is  in terms of how we've defined logic  far. They it's all through word co-occurrences. the second rule. And  it  , it is defined with respect to the 1st rule, because,  there's at most one thing being referred to. this second part is in the scope of the 1st quantifier. And also, if you want to ask me about this. for our purposes, then we want to integrate all of this into our general paradigm of syntax driven semantic composition,  we already did it with the rule. Every we can do the same thing with all of the other quantifiers  A and B, ,  we can do. with the likes and Npvp and Vnp, and  forth. ,  let's do every student. every is the this rule. and to show that you come up with the correct semantic representation for the whole sentence. what are the lexical rules with semantic attachments for a and for D, ,  for I'll give you the syntactic part of this. what would be the semantic attachment for this and also for , what would this look ? M. Dot lambda queue dot the exist symbol. F. Got it? X, dot. ,  let me do the M, that key and the queue first.st . , you have to take this whole thing from before. e of y wait. and you might want to , close this off in a parentheses. in logic. to exist, a unique thing. First, st it has to exist. and then the X will just be talking about the current noun phrase. According to this type of analysis there exists something, and when, whenever you have, there exists, it's usually paired with a conjunction. because you're usually asserting that there exists some X that has multiple properties. You take the adjective semantics, and you apply it to the noun semantics. say, lamb, something  lambda X, and then specify that there is the existence of some X satisfy us. wait. Would it be  to explain why for that for faith? normally, the order the adjective order matters syntactically in that there's a rule in English, for,  the order of adjectives. But  the I'm claiming that fake works in a different way. I'm saying that fake X and Student X is not the correct way to model the semantics of a fake student. you to model the meaning of something  fake student with  non. These are called non subjective adjectives. You have to , define it in terms of , you have a function that maps between students from students to fake students. remap that function of Presidents to another function which is  the function for former Presidents. The second reading. here we would get a conundrum with our current approach. our current approach with the lexical rules and semantic attachments  far would not get us both of these readings . If you think about it, it will only get us the 1st reading. in the 1st reading. With the rules we described, you will get only the 1st reading, and you would not get the second reading. that's a problem with. that's a problem with our current approach. we would  to have a way to derive both of these readings from the syntax. you'd  to have a way to do this. and it's within some  syllabus describing courses and students overall. But we know the specific relations that matter. here we're saying that s. 1 here is associated with for all students, because it's the students who are taking the courses. And the Takei, that's a thing being taken. It's not enumerating just saying this and this, and this is possible. when you do how know which order which reading you want. first, st you select the order in which to incorporate the quantifiers. and then for each quantifier you introduce a lambda abstraction over the appropriate index variable. and then you have the meaning representation where you've added this lambda. it's this whole thing. which is the existential outscoping the universal. If you want the other reading. it's the same idea, except that you extract 2 first, st and then you do the one. you extract the second the second entry from your storage first, st and then you introduce Lambda, s. 2 1st and simplify, and then you do it with the universal second, and then you have the universal, then outscoping the existential. You can also write it formally within this idea of syntax driven semantic composition by changing slightly the format of the semantic attachments,  that you talk about whether you're introducing. And then , you can't retrieve when you're doing the composition, because during the composition part, you're just building up your undespecified representation. Here is where you do the composition that we had from before, but before it was outside. Of s. 1 lets you to continue to derive the rest of the meaning representation on the outside of the noun phrase."
    ],
    "Topic 3": [
        "Jackie Cheung, Professor: Yes, , I'm recording . you haven't missed out much yet. We talked about nouns mostly proper nouns, and we talked about intransitive verbs and the other major high level concept from last class. And semantically, you're also combining things to build a bigger meaning chunk of meaning representation, and then once he gets to the top level of the S level, then you filled out everything that you need to fill out on the semantic side in order to build up a logical sentence in the logical formalism we're working with. that's  a reminder of what we talked about in this class. we're gonna talk about more kinds of verbs, say, say, transitive verbs. ,  , just as a quick reminder, lambda calculus is there as this separate thing to help us build, meaning the meaning representations piece by piece. the Lambdas are there to help you figure out or to help you express that you're still missing information. ,  last class, we talked about proper nouns, and this is the general form of them. It's some lambda expression with a constant and  and common nouns will also be some lambda expression, but this time with a predicate. And then we also talked about intransitive verbs. intransitive verbs only takes the subject as an as an argument. and I recall that what we said was that with intransitive verbs, we with verbs in general. it's a rules events, and then you can express that the event variable. E is associated with some something which is the ruler? Yes. Can you explain a bit more? There is a ruler ? let me explain. The question is , can I explain a little bit more of this event? with nouns and noun  things, it's  more obvious that you're creating these entities, and then you can reason about them and their relations to each other. But what about the verbs, and which often denote events? there is  for this event of  something rules. And then and then this rules E part. it's a predicate, but it's  here is function is to add a proper is to say, what's the property of this event variable. Because, previously, you can imagine that a simpler version of this is just to have,  a predicate  a multi place predicate. That's this is  the simpler alternative which is just that there's a rules X where that corresponds to the events. And things  that. Or even if you just have,  multiple events of the same type, then with the event variable version, it's much easier to deal with that. what about transitive verbs? we've talked about intransitive verbs. let's talk about transitive verbs. But again, conceptually, it's exactly the same. You remember this  with transitive verbs. You take the semantics of the verb. And it's annoying. 5, 50, which is a proper noun with its noun phrase, and then it combines to a verb phrase, and it combines to the sentence. We have this monstrosity we just introduced in the last slide, and Comp. Yes. The different parts of the conjuncts are written? with conjunct, with,  the logical and in logical order. But the order of the Lambdas here. yes,  . and it's just the same thing. If you look at the semantic attachment for that rule, you just copy it directly over. remember, from the previous slide. And then the arguments is this thing. Take this thing as the arguments. and it's it's a whole mess, but then it works out, because then this whole thing is  the functor, and then Comp. 5, 50 is the arguments. and this will be the simplified form of the verb phrase semantics. Yes. Why, just  that it's I guess. Yes. there could have been a simpler form that works with this specific sentence. and then each production also comes with a semantic attachment, and you use those to  work out what the meaning representation is for each constituent. But same thing , aren't we supposed to go left to ? ,  for the subject, you pass things up. And then it's the argument is the verb phrase semantics which we just arrived, and then you can simplify. we've done proper nouns. We've done intransitive verbs and transitive verbs. it turns out that language is full of quantifiers. And  the ones that most clearly map onto logical quantifiers are these words  all and every which map to universal quantifiers. For example, our students,  Comp. But either works. logical implication, whereas the existential one is accompanied by the conjunction. Do you remember, have you? Have you seen this? you use the implication. But we're no longer checking that X is stupid. And it's just not . And then it's gonna take this general form where you're looking for 2 things, lambda, P. Lambda, Q. and it'll look very similar for the existential. There exists  such that P. Of x and Q of X, and then you can check that within the derivation in a tree, which we'll we'll see in an example soon. , but let's talk about the other major thing which it turns out, you can model with quantifiers. luckily, in English and in French. I'll present to you an early theory for this which works within our framework. , yes, you have a question. on one of the metrics, there's an example where it's  the apple is in the yard. the apple would have. if you say the King of France is bald, if  anything about French politics. France currently has no king. if you say the King of France is bald, according to this analysis, that sentence should evaluate to false. They should just say that it. It's just. You can also imagine defining a new constant for King of France, just  for proper nouns. then,  ,  we need to translate these 3 properties. Yes, question. That's a great question. And one  one argument is that they don't really do reasoning and logic   and  they often don't do   when it comes to  thinking about how many entities and how many things there are in a particular context, because they don't build these logical representations. And we are talking about and associating the  pieces of information with them. this was the analysis presented by Bertrand Russell in 19 0 5, there are  different analyses of these things. if you're interested you can come and ask me about an office hours, and I'd be happy to chat about what are some other approaches to handling quantifiers and definiteness. for every student, this is the part that we haven't seen before. Yes. Yes. that's nice. Yes, that's . yes, that's . And sometimes because this comes up  often, this uniqueness. we came up with it because Bertran Russell said   intuitively. And yes, in the back. How do we deal with that? It  still works with this exact same form. They both will be stuffed into the queue itself, and they'll be introduced by the other parts of the queue. Yes. Sure. Pnq,  the A is the existential. ,  what about adjectives. Let's try to do adjectives as . ,  let me say that this is what we're aiming for. And we figure this out assuming that there's some other rule that combines nouns with adjectives. Anyone wanna guess or try? land why is it not absolutely yep. Yes. I think that works. then you can check. if you pass in. , let's check, because I'm not sure if this we might be slightly off. , it works. Yes, great. But it turns out that this doesn't work for all adjectives. It works for,  the majority class of adjectives. Why investigator? Sure. Can other people see the issue. Yes. but semantically, it should not matter, for if all the adjectives are  the majority class of  these are called subsective adjectives. But it's a different reason. you're getting. There was some hand in the back. You can only check it with respect to the property of the thing. You're they're faking. but it's that they're faking with respect to the specific property of studenthood studentness. yes, I guess in this case, would we use not relevant specific,  base adjective. how would you model instead? There are lots of things that are neither Presidents nor for former Presidents,  instead, you have to . Can you help me with this one? This gives rise to different readings. And for in this reading it can be a different course each time, because you create this existential Y for every student X,  it can be a different course. It would be the opposite. this is an illustration of this general idea, which is that we need a representation that is under specified with respect to some properties that we cannot no, until we have more contacts or more information. You might just genuinely have some missing information  the tense or something, or you just choose not to encode some information in your meaning representation. you have a meaning representation that is under specified with respect to things you don't know yet. You have  a lambda abstraction over it, and then you store the relevant information away  that you wait until you have,  some more information later on. and when once you do have that extra information, then you can take things out of storage and , put them in the  place and gets the correct interpretation after all. , for example, in our case. And we're gonna say that s 1 and S 2 are, gonna be these  special here. And they're associated with some entry in the storage which represents  things that  we're not sure what order to do things in. and then, when you have the extra information, you can take things out of storage, and then recombine  recombine them with the meaning representations to get the correct sentence level representation. this, this is the an example of that. this fits that definition, because I'll show that you can derive both possible meaning representations from this storage from this underspecified representation. But it's not just listing them up. And in cooper storage how this works is. Then what you do is you retrieve thing from you, retrieve things from storage. You're adding an entry into your storage or you're retrieving. The under specified representation for every student took a course with these rules, and with the this rule for the transitive verb. and you can check and make sure that it all works out for to get the under specified representation, and afterwards I encourage you to also , do the derivation, for,  both sides of this,  do the one, and then 2, and following this example, and then do the other one of 2, and then one to get the other reading."
    ],
    "Topic 4": [
        "And  there's this   these 2 perspectives. today, we're going to talk about, we're going to expand our grammar a little bit to account for several other phenomena. one standard way to express, that is to say that there is a event variable. There's some event that takes pre takes place, and it has a certain type which is  the types that corresponds to the verb itself. But the rules would be in the middle of that I don't really understand, sure. This is true, then that is true, but you need that this part. in this framework, a common thing people do is that they reify it. And  on, and  forth. Once inside the . the formulas will get complicated. But the concept is the same. , as long as you understand the high level concepts. there's a mechanical process to derive the things with a lambda calculus and function application. But the high level concept is exactly the same. And that's this,  long and seemingly complicated piece of thing that is in lambda calculus, with parts of 1st order, logic in it. And and you won't have to do anything this complex on the midterm. Don't worry about it. we can work through the derivation. You can do this at home to  again, to  work through each of the steps, and it looks complicated. But conceptually it's not complicated  conceptually. And this is what the entire syntax tree looks . 5 50. You have lambda XX applied to Comp. 5, 50. And after that it's  just going bottom up in the tree and doing function application with the rules of lambda calculus. because the order of the Lambdas here that tells you when you do function application what gets plugged in to which variable there. And no, you do not have to memorize this very midterm. , ,  here we have Conf 5 50.  it gets passed up from the lexical level to this noun phrase level. No change. ,  what that means is that you just copy the entire rule over here. and you can simplify you. Take this lambda XX. To 5, 50 com. 5, 50, and then you plug it in where the W is. And then this thing applied to this thing. and then you simplify. And all of these steps is applications of lambda calculus. you really have to practice that to not make a mistake. here lambda XX com. 5, 50 gets plugged into where W. Is , because the 1st lambda here is lambda W. And the argument is this entire function. Technically there, , technically, you're . There's a there's a separate step where you do the renaming. All bound variables can be renamed. this looks complicated. But if you want the same approach to work across multiple semantic phenomena, then you need it to be a little bit more complicated. But you don't have to worry about that. X. ,  from this step to this step. , ,  from this step. , this entire thing. this entire thing gets plugged in to where y is. it's this entire thing. this whole thing gets plugged into where Y is  then, when you do the rewriting,  you still have lambda Z, and then this whole thing becomes the why. 5, 50 is  the argument. This we're going. We're going left to , but here it's lambda Z, and then 2 things within it. And then and then the last step to get to the sentence level is the same. and then the subjects, semantics is Lambda XX. You can plug it in and simplify it here. 5, 50. . if there were 2 verbs in the sentence, would we expect it to be 2 event variables? the question is, if there are 2 verbs in the sentence, do we expect there to be 2 event variables. , that's what you would expect. 5, 50 would be for all. 550, I guess technically here to be consistent, I should really do. the universal quantifier is almost always accompanied by this implication. Cause cause what happens if you have for all X student X and X likes com, 5, 50, what would that mean? Cause if it's a conjunct. 5, 50. 5, 50, not the not the instructors, and not the tas, and not  anything that's not a person, for example. Conf 5, 50. 5 50. that's that's I think that's almost that's almost it. Conf 5, 50, this thing should evaluate to true. if this was an implication arrow, as long as you have anything that is not a student. It evaluates the whole thing evaluates to true. the implication is just very weird. If you include parentheses  for all x. and then open the parentheses that X is a student. this is what the form of the rule would look  you have. Which corresponds to the 2 parts of the implication, and then you introduce the universal quantifier here. It'll just be debt rewrites to sum. And then lambda, p. Lambda. We it's it's I don't have to . Justify what definiteness is to you, because, , they clearly exist as words  B or A, it turns out that many languages don't have these things  they don't mark definiteness  this. maybe if the linguists were Chinese, they would not have focused on this  much, because in Chinese you don't mark definiteness, you do mark definiteness, but using a bunch of other means, and not with  these words, you can see,  B or A, . and many other languages also do not mark definiteness with articles. I don't know. , according to him. 5, 50. You're really asserting 3 things. 5, 50. This is according to Bertone Russell. you have to assert uniqueness for both of them. ,  ,  why these 3 properties? then this is weird, ? and it evaluates to false because there is no King of France. Other people are saying, Don't don't think that it's you should say that the King of Francis Bald is false. It's neither true or false for other reasons. You can come to ask me about this in office hours. And  then this already presupposes that it points to something which is the King of France. Again I reverted back to the simple form of  the event. Semantics. Are we talking about  everywhere in the entire domain. Or are we talking about within the context of where that sentence is uttered? I think,  dealing with definiteness and  forth. is really interesting to me linguistically, but also , this is one thing. But if you ask them to reason about things, and if you ask them to  reason about oh, I said, , there's a student. And the student has  these properties and got these grades. arguably, that's because they don't  think about things logically. And again, in the rules, I introduced explicit event variables. this is what this would look . Lambda, p. Lambda. It's lambda. X, student X.  then the noun phrase semantics is, you just do function application on the 2 of them. And  then this function of lambda X student X gets put in where the P. Is. we have lambda. For all x lambda y state of y student of y applied to X implies Q of x. and then you further simplify, and you take the X and you plug it in where the Y is. you have lambda. And then there's going to be a Q of X that is still to come, which is where we plug in the part about  likes. Lambda, P. Lambda. P for open. It'll the beginning will look the same. Sometimes people simplify this with  some. How did we come up with this rule? And then we need to write it what he said. for the P. And Q, we want something that takes more than one argument. Because how that would be expressed would be  the P. And the queue themselves would introduce those other things. you don't have to worry about that. say, a lambda X student of X to P, then it gets plugged in there. then we have this applied to that, I'm going to rename this Y, and then, if we simplify that. because then this X  gets plugged into where the Y is. you might want to ask, do all adjectives work  this are all adjectives, adjectives about adding conditions to  additional conditions,  additional predicates or properties. And maybe you think that all adjectives might be  adding these conditions that you can express as predicates with a conjunction. But there are other adjectives  fake, or former, or false, or  things  that. that's an another interesting thing to think about. , I have to think about that. That,  something about fake X is really weird. , in the back office. You can't really. , ,  there are 2 senses of fake. you can't really check whether something is fake or not in that sense. Only when you're talking, saying, talking about a fake student. it's it's a real person. The person is not fake. And  for that reason, semantically, you cannot take this approach of modeling as a conjunction of multiple predicates. you need to rethink this whole enterprise. you have to , rethink this whole thing. There are lots of  phenomena that if you think about it a little bit more, you realize that they're , really complex. But we just don't think about it. the way you can think about it is, you can think about it as the quantifiers can be rearranged and they can follow. The general idea is that everything that you don't know yet you store it away. And what's going to happen is that we're going to express it using something  this. But we won't capture  every possible explicit sentence. It's just saying that here's here, there's some taker and some takey, and then there's some things in storage which corresponds to the whether it's the student doing the taking or the course, doing the taking, and  forth. And then you do beta reduction. a function application to simplify. then you have your You have the piece from storage. and  you can simplify. and then you do the same trick where you take entry 2 out of storage, and then you introduce a lambda abstraction over s. 2 to make it a bound variable. you need to specify when you're composing a quantifier with a noun, you're  modifying the inside part of a storage and then  the Np introduces a new index variable which is wrapped in some lambda expression. ,  this is what it would look . this is what happens semantically, is that you want to introduce a new lambda UU. it's inside the storage. and this lambda UU."
    ],
    "Topic 5": [
        "each word at the leaf of the tree is associated with some fragment of meaning representation in the logic that we care about. You also do function application in lambda calculus to build up a bigger piece of the meaning representation for the whole constituents. And then something called definite descriptions. this is a predicate that eventually checks whether something is a student or not for the noun student. that's the point of all. What that means is that they create a discourse entity that corresponds to that event. But   to you, need to create this event variable  that there can be a discourse entity associated with it,  you can reason with it. that's the that's the intuition here. We're talking about the entity associated with this event variable, . And the ruler part is saying that it's associated with this other entity, which is the entity that rules. that's the basic intuition. but by reifying it makes things a lot more flexible. making something  tangible as an entity. But this is called Neo Davidsonian event semantics. and a transitive verb might be something  enjoys. ,  Jackie enjoys comp. 5, 50.  it's transitive because there's a direct object, and there's a subject. how do we derive the semantics of that? that means enjoys verb rewrites to enjoys, needs to be associated with something. And the way you derive this particular form is just. You have to work through it and figure out that this is the form you need in order for everything to work out and be filled in the  place essentially. the additional rules that we need is that we need to have rules for the direct object to for the semantic attachment associated with  the direct object, rule ? And then the sentence rewrites to Npvp. ,  Jackie is a proper noun, and it's a noun phrase, and then verb of enjoys. And then there's comp. for proper noun rewrites to Jackie it looks  this lambda XX applied to Jackie or enjoys. this part doesn't matter. If there is a bunch of them together, it doesn't matter what order you write them in. that you can prove that pretty easily with , say, I don't know logic tables, or whatever. I understand the variable V and X, but I don't understand the variable total. you don't understand the variable? and what you end up with is lambda Z. and then you put the Comp. 5, 50, and you plug it in where the X is, and eventually the constant of comp. But if you if you do that, then you'll derive this. it's still missing something which makes sense, because we still don't know what who the enjoyer is. Why, though  before oh, it's just  that you can always rename things. Comp, 5, 50 ends up in the position of enjoy. and then Comp. Applied to the constant Jackie. And in the end you get what we want, which is that we've created this enjoying events variable, this event variable, that corresponds to a type of enjoying events where the enjoyer is this constant that points to Jackie and the enjoyee is this constant that points to something  something that represents Comp. There exists an event, E such that E is in liking event, and the liker of E, and the liker of E is student. No  is X, and the  key of E is comp. Because  , what we're focusing on is the bonification part. all students  Comp, 5, 50, it's for all. However, you want to represent that  just as a reminder. Otherwise, that doesn't work. You're saying that there exists a student, and there's something that makes Comp. I think the specifics I'd  to. I, , you can work through this. And they , Comp, 5, 50. ? we've modeled indefinites  with existentials. The definite case as . and, in fact, , if you're a second language speaker of English, maybe when you learn English, if you came from learning a language that doesn't mark definiteness with articles. It might have been tricky, ? hey? We're learning something from  the last millennium. and also in particular, why property one, if you consider something  the King of Francis Bald. But this doesn't work because King of France has to point to something. There's an entity that's a student. It's  in the entire domain of discourse. But that's why it's called the domain of discourse, because within the context of a particular sentence, you can define that domain of discourse, not as the whole world, but as  the world of  the shared conversational state between the speaker and the listener. and then with  within that narrowly scoped domain of discourse, then there should only be one student is what this is saying. I claim that  language models maybe don't do   with quantifiers and things  this. I think you can probably design a bunch of tests to trick chat, gpt into getting things wrong when it comes with reasoning with quantifiers. Second room. , we can't see it in isolation, ? Comp, 5, 50 with the same rules as before. For all XP. I also renamed the X to the Y before doing that. Q of x.  this is the this is what we want, because it's plugging things, plugging the student predicate in into the correct location. Comp, 5, 50. And then you can, you can do this for the rest of the sentence and work through all of those function applications very carefully. and you need all the 3 parts ? there'll be. And Q of X.  that's the 3 parts. this room. That's the second conjunction. if you have,  a transitive verb, intransitive verb, whatever it doesn't matter, they both apply. it'll still work. Other questions. ,  what we're aiming for is that we have lambda X student X's student. Yep. Oh, maybe we also need , something  that. , that seems promising. And yep. Oh, I think it works. Any questions. oh, , . why doesn't this approach work for a fake? suppose you model fake as  fake X and Student X, why doesn't that work? the order doesn't matter. , it might matter. Oh, , . Its definition relies one student as , exactly. , there are lots of this is one reason why I really  language and linguistics. We just can process language, because we've learned it somehow. how do we represent that using 1st order logic? the syntactic structure matches the semantic structure. because the syntactic structure has,  every students, being in the subject position, being on the outside. And  if you, if you dutifully work through all of the syntactic compositions with the semantic attachments. we want an underspecified representation that is compatible with both readings. there are many cases where you might want this . ,  I'll introduce approach called Cooper Storage. From the underspecified representation. here we have our event variable, and we have a taker and take key. this is going to be the underspecified representation associated with the sentence. When we said the aim was to have this underspecified representation that embodies all readings without explicitly enumerating them, it meant , we will have 1st order logic for every possibility. you want to be able to recover them. ,  suppose that we want to 1st incorporate entry one and then entry 2.  you pick an ordering. s. 1.    s. 1 is a bound, variable . then you can put the taker and the correct place. Student X implies the events and the and the X gets put into the correct place with the taker. and you end up with one of the 2 readings. But you can derive this yourself, work through and derive the representation. ,  if there are no more questions, we'll end there, and I'll see you at the midterm or in office hours."
    ]
}