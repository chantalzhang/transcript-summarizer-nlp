{
    "Topic 1": [
        "we're in the setting of syntax-driven semantic composition. and that when you do a syntactic composition by applying a rule in your context-free grammar. And semantically, you're also combining things to build a bigger meaning chunk of meaning representation, and then once he gets to the top level of the S level, then you filled out everything that you need to fill out on the semantic side in order to build up a logical sentence in the logical formalism we're working with. And in our case it's 1st order logic. And here's the syntax driven semantic composition  a rule that we have ? each context-free grammar rule is accompanied by some expression that tells you how to combine the meaning representations of the pieces. ,  last class, we talked about proper nouns, and this is the general form of them. It's some lambda expression with a constant and  and common nouns will also be some lambda expression, but this time with a predicate. intransitive verbs only takes the subject as an as an argument. There are no direct objects. one standard way to express, that is to say that there is a event variable. There's some event that takes pre takes place, and it has a certain type which is  the types that corresponds to the verb itself. it's a rules events, and then you can express that the event variable. But the rules would be in the middle of that I don't really understand, sure. ,  you remember we're building this logical representation in order to say, access some database, or make some inferences to say , did something happen? This is to build some meaning representation in order to be able to do some inferences. You you always have . there is  for this event of  something rules. there always needs to be some event variable every time you introduce a new events  ever . it's a predicate, but it's  here is function is to add a proper is to say, what's the property of this event variable. We're talking about the entity associated with this event variable, . That's this is  the simpler alternative which is just that there's a rules X where that corresponds to the events. because then you can have optional elements,  locations and times and passive structures, and you can just all account for them in the same way by talking about properties of event variables. and a transitive verb might be something  enjoys. how do we derive the semantics of that? that means enjoys verb rewrites to enjoys, needs to be associated with something. But conceptually, it's the same. You take the semantics of the verb. and you apply it to the semantics of the direct object noun phrase. But conceptually it's not complicated  conceptually. ,  Jackie is a proper noun, and it's a noun phrase, and then verb of enjoys. 5, 50, which is a proper noun with its noun phrase, and then it combines to a verb phrase, and it combines to the sentence. for proper noun rewrites to Jackie it looks  this lambda XX applied to Jackie or enjoys. and  the order of the variables. with conjunct, with,  the logical and in logical order. If there is a bunch of them together, it doesn't matter what order you write them in. that you can prove that pretty easily with , say, I don't know logic tables, or whatever. And no, you do not have to memorize this very midterm. I understand the variable V and X, but I don't understand the variable total. you don't understand the variable? , ,  here we have Conf 5 50.  it gets passed up from the lexical level to this noun phrase level. The rule is that you take the verb semantics and the noun semantic noun phrase semantics, and you combine them together where the noun phrase semantics is the arguments. and then you put it there where the Y is. and this will be the simplified form of the verb phrase semantics. All bound variables can be renamed. and the and they're they're . There are only 2 chunks. ,  for the subject, you pass things up. and then the subjects, semantics is Lambda XX. Applied to the constant Jackie. And then it's the argument is the verb phrase semantics which we just arrived, and then you can simplify. And in the end you get what we want, which is that we've created this enjoying events variable, this event variable, that corresponds to a type of enjoying events where the enjoyer is this constant that points to Jackie and the enjoyee is this constant that points to something  something that represents Comp. if there were 2 verbs in the sentence, would we expect it to be 2 event variables? the question is, if there are 2 verbs in the sentence, do we expect there to be 2 event variables. 550,  technically here to be consistent, I should really do. 550 is expressed by an existential quantifier. that's that's  that's almost that's almost it. this is what the form of the rule would look  you have. we've modeled indefinites  with existentials. The definite case as . It applies to the apple and applies to the yard. France currently has no king. and it evaluates to false because there is no King of France. It's neither true or false for other reasons. You can also imagine defining a new constant for King of France, just  for proper nouns. Are we talking about  everywhere in the entire domain. Or are we talking about within the context of where that sentence is uttered? It's  in the entire domain of discourse. But that's why it's called the domain of discourse, because within the context of a particular sentence, you can define that domain of discourse, not as the whole world, but as  the world of  the shared conversational state between the speaker and the listener. and then with  within that narrowly scoped domain of discourse, then there should only be one student is what this is saying. And one  one argument is that they don't really do reasoning and logic   and  they often don't do   when it comes to  thinking about how many entities and how many things there are in a particular context, because they don't build these logical representations. arguably, that's because they don't  think about things logically. this is what this would look . X, student X.  then the noun phrase semantics is, you just do function application on the 2 of them. , but we can do this part together. M. Dot lambda queue dot the exist symbol. And what about for the ? An x such that p of x. and for all. for the P. And Q, we want something that takes more than one argument. if you have,  a transitive verb, intransitive verb, whatever it doesn't matter, they both apply. and then the X will just be talking about the current noun phrase. a becomes P. And Q. According to this type of analysis there exists something, and when, whenever you have, there exists, it's usually paired with a conjunction. You take the adjective semantics, and you apply it to the noun semantics. Also  dead,  that where, , you cannot model them with  a conjunction  that. Would it be  to explain why for that for faith? it's not , they're . Even that is  arguable, . Or if you talk about  Presidents and former Presidents, it's ,  that's also another case that you can more clearly see. former Presidents are not all of the entities which are not currently Presidents ? There are lots of things that are neither Presidents nor for former Presidents,  instead, you have to . remap that function of Presidents to another function which is  the function for former Presidents. It would be the opposite. With the rules we described, you will get only the 1st reading, and you would not get the second reading. , , in our case. and it's within some  syllabus describing courses and students overall. here we have our event variable, and we have a taker and take key. And  the index variables here, the index indices here are important because they point to the things in the storage. when you do how know which order which reading you want. and then for each quantifier you introduce a lambda abstraction over the appropriate index variable. and then you have the meaning representation where you've added this lambda. s. 1.    s. 1 is a bound, variable . And then  it becomes for all. If you want the other reading. You can also write it formally within this idea of syntax driven semantic composition by changing slightly the format of the semantic attachments,  that you talk about whether you're introducing. And then , you can't retrieve when you're doing the composition, because during the composition part, you're just building up your undespecified representation. you need to specify when you're composing a quantifier with a noun, you're  modifying the inside part of a storage and then  the Np introduces a new index variable which is wrapped in some lambda expression. ,  this is what it would look . this is what happens semantically, is that you want to introduce a new lambda UU."
    ],
    "Topic 2": [
        "Jackie Cheung, Professor: Yes, , I'm recording . you haven't missed out much yet. Is that how this works is that each lexical item. each word at the leaf of the tree is associated with some fragment of meaning representation in the logic that we care about. And then something called definite descriptions. And then and then this rules E part. that's why we do this  complex thing of  of this is called reification, ? But this is called Neo Davidsonian event semantics. But the concept is the same. first, st we have to have a semantic attachment to the lexical rule. And the way you derive this particular form is just. Because for the direct object, you have something  Vp rewrites to Vnp. Rule is still there, and it's still the same. we can work through the derivation. And this is what the entire syntax tree looks . The  step is to write down the semantic attachments for all of the lexical rules. We have this monstrosity we just introduced in the last slide, and Comp. And then  how it simplifies. the semantic attachment for that rule, you just copy it directly over. And  for Vp rewrites to Vnp. ,  what that means is that you just copy the entire rule over here. you really have to practice that to not make a mistake. it's still missing something which makes sense, because we still don't know what who the enjoyer is. then how does it get turned into? I didn't want to put X here because it might get confused with this X.  I just renamed it? Why, just  that it's . But you're , you're you're allowed to do that. there could have been a simpler form that works with this specific sentence. The , you understand, the concept of each lexical rule comes with a semantic attachment. and then each production also comes with a semantic attachment, and you use those to  work out what the meaning representation is for each constituent. But here, I just for the sake of clarity, I just switch back to  the simpler predicates way of expressing events. Because  , what we're focusing on is the bonification part. I'm hoping you've seen this  . Cause if it's a conjunct. But we're no longer checking that X is stupid. And it's just not . It's still the same problem. you have a determiner and then rewrites to the lexical item every or all. There exists  such that P. Of x and Q of X, and then you can check that within the derivation in a tree, which we'll  in an example soon. I'll present to you an early theory for this which works within our framework. which is, it's from Russell in 19 0, 5. ,  it's the Russell's theory of definite descriptions. This would have the 3 properties enforced, but the yard wouldn't, because it's not followed by a predicate. ,  ,  why these 3 properties? and also in particular, why property one, if you consider something  the King of Francis Bald. And  then this already presupposes that it points to something which is the King of France. But if you ask them to reason about things, and if you ask them to  reason about oh, I said, , there's a student. And the student has  these properties and got these grades. They might not reason   because they don't connect the information expressed about the student back to  when it's introduced. they don't keep, do  a perfect job and keeping track of how many entities have been introduced in our. , we can't see it in isolation, ? And  it  , it is defined with respect to the 1st rule, because,  there's at most one thing being referred to. And also, if you want to ask me about this. with the likes and Npvp and Vnp, and  forth. And again, in the rules, I introduced explicit event variables. every is the this rule. what are the lexical rules with semantic attachments for a and for D, ,  for I'll give you the syntactic part of this. Implies y equals x , P of y implies that y equals x and the predicates . and you might want to , close this off in a parentheses. And sometimes because this comes up  often, this uniqueness. It  still works with this exact same form. to do adjectives as . you might want to ask, do all adjectives work  this are all adjectives, adjectives about adding conditions to  additional conditions,  additional predicates or properties. it seems to make sense ,  a student can be smart, or they can be tall, or they can be short, or they can be young and old doesn't matter . And  you think that all adjectives might be  adding these conditions that you can express as predicates with a conjunction. But it turns out that this doesn't work for all adjectives. It works for,  the majority class of adjectives. why doesn't this approach work for a fake? but semantically, it should not matter, for if all the adjectives are  the majority class of  these are called subsective adjectives. You can only check it with respect to the property of the thing. but it's that they're faking with respect to the specific property of studenthood studentness. And  for that reason, semantically, you cannot take this approach of modeling as a conjunction of multiple predicates. yes,  , would we use not relevant specific,  base adjective. how would you model instead? These are called non subjective adjectives. , there are lots of this is one reason why I really  language and linguistics. We just can process language, because we've learned it somehow. here we would get a conundrum with our current approach. our current approach with the lexical rules and semantic attachments  far would not get us both of these readings . And  if you, if you dutifully work through all of the syntactic compositions with the semantic attachments. that's a problem with our current approach. this is an illustration of this general idea, which is that we need a representation that is under specified with respect to some properties that we cannot no, until we have more contacts or more information. or in general with all possible readings. and ideally, we would  that without having to explicitly enumerate all of them. you have a meaning representation that is under specified with respect to things you don't know yet. ,  I'll introduce approach called Cooper Storage. The general idea is that everything that you don't know yet you store it away. And then, once you've read the entire syllabus, you can figure out intuitively, you can figure out  which was the intended interpretation. But we know the specific relations that matter. And the Takei, that's a thing being taken. when I say, what does it mean to have some representation compatible with all possible readings without explicitly enumerating them. this, this is the an example of that. this fits that definition, because I'll show that you can derive both possible meaning representations from this storage from this underspecified representation. It's not enumerating just saying this and this, and this is possible. But it's not just listing them up. And in cooper storage how this works is. and you end up with one of the 2 readings. and when you compose them syntactically. Of s. 1 lets you to continue to derive the rest of the meaning representation on the outside of the noun phrase. and you can check and make sure that it all works out for to get the under specified representation, and afterwards I encourage you to also , do the derivation, for,  both sides of this,  do the one, and then 2, and following this example, and then do the other one of 2, and then one to get the other reading."
    ],
    "Topic 3": [
        "You also do function application in lambda calculus to build up a bigger piece of the meaning representation for the whole constituents. And  there's this   these 2 perspectives. The syntax part is  you combine things to make a bigger syntactic chunk. though by no means is this exhaustive. ,  , just as a , lambda calculus is there as this separate thing to help us build, meaning the meaning representations piece by piece. E is associated with some something which is the ruler? The events concept , is it  an action, or is it the representation of the verb  that 1st one was, I understand, the second one, and the 3rd one, when there will be but  in ruler. There is a ruler ? Or did something not happen, and who was involved or whatever . that's the point of all. with nouns and noun  things, it's  more obvious that you're creating these entities, and then you can reason about them and their relations to each other. in order to be able to reason about something, you have to have some entity that exists that you can manipulate   in logic. This is true, then that is true, but you need that this part. What that means is that they create a discourse entity that corresponds to that event. But   to you, need to create this event variable  that there can be a discourse entity associated with it,  you can reason with it. that's the that's the intuition here. when you say there exists E, it means that there's some you're saying that there exists some discourse entity. there always needs to be  event management where you just put it. And the ruler part is saying that it's associated with this other entity, which is the entity that rules. why are we doing things that way? Because, previously, you can imagine that a simpler version of this is just to have,  a predicate  a multi place predicate. but by reifying it makes things a lot more flexible. and you can also add information to the event variable about  a tense and modality  when it happened, or will something likely happen? there's a mechanical process to derive the things with a lambda calculus and function application. 5, 50.  it's transitive because there's a direct object, and there's a subject. And that's this,  long and seemingly complicated piece of thing that is in lambda calculus, with parts of 1st order, logic in it. And and you won't have to do anything this complex on the midterm. the additional rules that we need is that we need to have rules for the direct object to for the semantic attachment associated with  the direct object, rule ? you need a semantic attachment associated with that which is that we have the. And then the sentence rewrites to Npvp. first, st if you want, you can draw the entire syntax tree. And after that it's  just going bottom up in the tree and doing function application with the rules of lambda calculus. The different parts of the conjuncts are written? because the order of the Lambdas here that tells you when you do function application what gets plugged in to which variable there. and it's just the same thing. and do I do the simplification? and you can simplify you. 5, 50, and then you plug it in where the W is. and what you end up with is lambda Z. and it's it's a whole mess, but then it works out, because then this whole thing is  the functor, and then Comp. 5, 50, and you plug it in where the X is, and eventually the constant of comp. Question, how do we go from lambda x dot x 5, 50 in the 1st line into lambda y dot y, is it because we're  switching in X dot x for y, or is that a typo? 5, 50 gets plugged into where W. Is , because the 1st lambda here is lambda W. And the argument is this entire function. It's because,  there's a there's a whole series of reasoning steps you can derive to show that this is the way that you need to make to make all the representations look more similar to each other in form and to have function application workout across multiple syntactic constructions. this entire thing gets plugged in to where y is. this whole thing gets plugged into where Y is  then, when you do the rewriting,  you still have lambda Z, and then this whole thing becomes the why. 5, 50 is  the argument. But same thing , aren't we supposed to go left to ? We're going left to , but here it's lambda Z, and then 2 things within it. You can plug it in and simplify it here. 5, 50 would be for all. all students  Comp, 5, 50, it's for all. However, you want to represent that  just as a reminder. Whereas here what we want is that we want only the students to  Comp. You're saying that there exists a student, and there's something that makes Comp. Conf 5, 50, this thing should evaluate to true. It evaluates the whole thing evaluates to true. If you add extra parentheses and you replace this with an end, it still doesn't work. You need both to apply. And they , Comp, 5, 50. ? And this can be all, it's the same thing. And then it's gonna take this general form where you're looking for 2 things, lambda, P. Lambda, Q. And then lambda, p. Lambda. And this is quite interesting linguistically, which is definiteness,  the. luckily, in English and in French. this is also historically interesting. You're really asserting 3 things. First, st you're asserting that there is an entity who is the student. This is according to Bertone Russell. all 3 things still apply for the yard. you have to assert uniqueness for both of them. if you say the King of France is bald, if  anything about French politics. if you say the King of France is bald, according to this analysis, that sentence should evaluate to false. They should just say that it. 1st order, logic, meaning representation, might be asserting something  bald King of France. But this doesn't work because King of France has to point to something. then, rather than doing this, according to Bertrand Russell, then you should just the King of Francis Bald asserts that there is an entity that is the King of France. There's an entity that's a student. And  the way that you do this is with this relatively complex formula in 1st order, logic. Again I reverted back to the simple form of  the event. ,  dealing with definiteness and  forth. is really interesting to me linguistically, but also , this is one thing. I would say that they  do quite  in stringing together sentences that seem to use quantifiers correctly, in a grammatically fluent way. you can  design a bunch of tests to trick chat, gpt into getting things wrong when it comes with reasoning with quantifiers. for our purposes, then we want to integrate all of this into our general paradigm of syntax driven semantic composition,  we already did it with the rule. Comp, 5, 50 with the same rules as before. And  then this function of lambda X student X gets put in where the P. Is. almost not quite  the beginning. , you have to take this whole thing from before. and you need all the 3 parts ? And Q of X.  that's the 3 parts. then, that's the simplification for this whole thing. because you're usually asserting that there exists some X that has multiple properties. and if you want to get to a deeper level of explanation, then you should write out the truth tables for conjunction, and then check that this maps to your intuitive understanding of what it means to say that there exists a student who has this property? If we want to say that there are smart students, then  they are lambda X, smart X and student X, that's the form that we want to get for a smart student. the question is, what is gonna be the rule for smart, the adjective smart. syntactically, it will be something  adjective rewrites to smart. Go ahead just to say that there exists something that can be smart. land why is it not absolutely yep. say, a lambda X student of X to P, then it gets plugged in there. because then this X  gets plugged into where the Y is. that's an another interesting thing to think about. Would order matter  a smart big student versus a fake smart student. normally, the order the adjective order matters syntactically in that there's a rule in English, for,  the order of adjectives. But it's a different reason. with smart and student,  that there are a set of things in the world that are smart. And there's a set of things in the world that are students, and a smart student is  at the intersection of them. you need to rethink this whole enterprise. You have to , define it in terms of , you have a function that maps between students from students to fake students. you have to , rethink this whole thing. This gives rise to different readings. the syntactic structure matches the semantic structure. because the syntactic structure has,  every students, being in the subject position, being on the outside. whereas the existential quantifier is in the object position, it's on the inside. we would  to have a way to derive both of these readings from the syntax. there are many cases where you might want this . You might just genuinely have some missing information  the tense or something, or you just choose not to encode some information in your meaning representation. you'd  to have a way to do this. and when once you do have that extra information, then you can take things out of storage and , put them in the  place and gets the correct interpretation after all. And they're associated with some entry in the storage which represents  things that  we're not sure what order to do things in. here we're saying that s. 1 here is associated with for all students, because it's the students who are taking the courses. There exists a Y course Y, and that's associated with S. 2 with the second entry in your storage. and then, when you have the extra information, you can take things out of storage, and then recombine  recombine them with the meaning representations to get the correct sentence level representation. It's just saying that here's here, there's some taker and some takey, and then there's some things in storage which corresponds to the whether it's the student doing the taking or the course, doing the taking, and  forth. you want to be able to recover them. a function application to simplify. ,  suppose that we want to 1st incorporate entry one and then entry 2.  you pick an ordering. then you have your You have the piece from storage. and if we do the simplification. then you can put the taker and the correct place. if you do the simplification, this lambda. Student X implies the events and the and the X gets put into the correct place with the taker. and then you do the same trick where you take entry 2 out of storage, and then you introduce a lambda abstraction over s. 2 to make it a bound variable. then you can then do the simplification. you extract the second the second entry from your storage first, st and then you introduce Lambda, s. 2 1st and simplify, and then you do it with the universal second, and then you have the universal, then outscoping the existential. You're adding an entry into your storage or you're retrieving. Of s. 1 which is associated with some entry in your storage of and inside."
    ],
    "Topic 4": [
        "We talked about nouns mostly proper nouns, and we talked about intransitive verbs and the other major high level concept from last class. that's  a reminder of what we talked about in this class. today, we're going to talk about, we're going to expand our grammar a little bit to account for several other phenomena. we're gonna talk about more kinds of verbs, say, say, transitive verbs. And then we're also going to talk about quantifiers. And then we also talked about intransitive verbs. and I recall that what we said was that with intransitive verbs, we with verbs in general. Can you explain a bit more? But what about the verbs, and which often denote events? in this framework, a common thing people do is that they reify it. this abstract idea that it's  a it's an entity. and you can talk about it, and you can talk about its properties. You can talk about when it happened, and or will it happen? making something  tangible as an entity. , as long as you understand the high level concepts. But the high level concept is exactly the same. we've talked about intransitive verbs. You remember this  with transitive verbs. remember, from the previous slide. and then you put the Comp. the thing that is enjoyed, and that's what we were hoping for. Why, though  before oh, it's just  that you can always rename things. Technically there, , technically, you're . But you don't have to worry about that. 5, 50 is substituted for X, the way I'm reading it, I thought it would be substituted breeze. X. ,  from this step to this step. , ,  from this step. why is it being substituted for  and , why aren't we looking for it as ? It's not  there's 1 chunk, a second chunk, and a 3rd chunk. And then and then the last step to get to the sentence level is the same. We've done intransitive verbs and transitive verbs. Student X implies,  x. Comp. There exists an event, E such that E is in liking event, and the liker of E, and the liker of E is student. No  is X, and the  key of E is comp. X student X implies something. when we do model indefinite articles and also quantifiers  sum is that some student, a student, likes comp. Such that X is a student, and then X likes comp. Do you remember, have you? What it means is that it's asserting that everything is a student, and everything likes Comp. here this is a condition ? Such student X implies X likes. No, no, that's the correct meaning, ? the correct meaning is, as long as there's a student who likes. if this was an implication arrow, as long as you have anything that is not a student. the implication is just very weird. And they  convoluted 50 where the X is the same as the one outside,  you would enclose the inner part in brackets, forcing that X to be the same one as the student and them liking. the basic idea here is that for universal, it's usually a condition. there's some something that is both a student. for our purposes, , I'm gonna skip to the lexical rules and then come back to talk about definiteness. Which corresponds to the 2 parts of the implication, and then you introduce the universal quantifier here. We it's it's I don't have to . Justify what definiteness is to you, because, , they clearly exist as words  B or A, it turns out that many languages don't have these things  they don't mark definiteness  this. if the linguists were Chinese, they would not have focused on this  much, because in Chinese you don't mark definiteness, you do mark definiteness, but using a bunch of other means, and not with  these words, ,  B or A, . and many other languages also do not mark definiteness with articles. and, in fact, , if you're a second language speaker of English,  when you learn English, if you came from learning a language that doesn't mark definiteness with articles. how do we express the student in 1st order? We're learning something from  the last millennium. when you say the student, as in the student took comp. And you're also asserting that the student participates in some predicate which here would be took comp. ,  in this analysis, then in you can express all of this in 1st order logic. then this is weird, ? Other people are saying, Don't don't think that it's you should say that the King of Francis Bald is false. and then the 1st order, meaning representation. then,  ,  we need to translate these 3 properties. There's at most one thing that is a student, and the student participates in this predicate. there exists in X, such that X is a student, that's property one. And it's a unique student. 2, and took X, comp. And that's how you model the meaning of the student took Comp 550. , technically, this is  in terms of how we've defined logic  far. I claim that  language models  don't do   with quantifiers and things  this. That's a student  you have to say that everything that's a student is the same as X.  , and that. this second part is in the scope of the 1st quantifier. this was the analysis presented by Bertrand Russell in 19 0 5, there are  different analyses of these things. ,  let's do every student. for every student, this is the part that we haven't seen before. Of x implies Q of x, and then, student, you can get from the previous slide. Q of x.  this is the this is what we want, because it's plugging things, plugging the student predicate in into the correct location. And then there's going to be a Q of X that is still to come, which is where we plug in the part about  likes. And then you can, you can do this for the rest of the sentence and work through all of those function applications very carefully. and to show that you come up with the correct semantic representation for the whole sentence. ,  this is the syntactic part. And then what was there exists. ,  let me do the M, that key and the queue first.st . There exists an X such that p of x, and . Sometimes people simplify this with  some. something  exist with a exclamation mark. It means that there's a there exists a unique X such that . How did we come up with this rule? And then we need to write it what he said. he said that  it's exists a unique thing. to exist, a unique thing. First, st it has to exist. And if it's unique, that means everything else that has that predicate must be that thing. Because how that would be expressed would be  the P. And the queue themselves would introduce those other things. you don't have to worry about that. They both will be stuffed into the queue itself, and they'll be introduced by the other parts of the queue. , this is the syntactic. Anyone wanna guess or try? Oh,  we also need , something  that. , let's check, because I'm not sure if this we might be slightly off. then we have this applied to that, I'm going to rename this Y, and then, if we simplify that. But there are other adjectives  fake, or former, or false, or  things  that. suppose you model fake as  fake X and Student X, why doesn't that work? , I have to think about that. But  the I'm claiming that fake works in a different way. I'm saying that fake X and Student X is not the correct way to model the semantics of a fake student. That,  something about fake X is really weird. , ,  there are 2 senses of fake. You can say someone is very fake in the sense that they're not sincere. I don't mean that sense. the sense of  a fake student  it might be  someone pretending to be a student. , but they're not  a student. you can't really check whether something is fake or not in that sense. But , but for fake, this is clearly not the  way to model it, because it's not  there's a set of fake things in the world. But they're not  a student, ? They say they're a student. But they're not  a student. But a fake student is also not just anything that is not a student. you to model the meaning of something  fake student with  non. There are lots of  phenomena that if you think about it a little bit more, you realize that they're , really complex. But we just don't think about it. what are the possible readings for the sentence, every student took a course. any course we have one course on there program, or they, every student took one specific course. can do you all get both readings is either every student took some course, a different course, or it can be. Every student took the same course. how do we represent that using 1st order logic? the way you can think about it is, you can think about it as the quantifiers can be rearranged and they can follow. They they can outscope one another, and they. the 1st reading is for every students there exists a course such that they took it  here the universal quantifier outscopes the existential quantifier. And for in this reading it can be a different course each time, because you create this existential Y for every student X,  it can be a different course. Every student took a course. It would be the existential quantifier outscopes the universal quantifier. there exists, of course, y such that every student takes it. If you think about it, it will only get us the 1st reading. we want an underspecified representation that is compatible with both readings. you saw the expression, every student took a course. After you've read the whole syllabus, and then you can go back to retrieve and derive the corrects disambiguated meaning representation. Every student took a course. And what's going to happen is that we're going to express it using something  this. because it's every student took a course. this is going to be the underspecified representation associated with the sentence. When we said the aim was to have this underspecified representation that embodies all readings without explicitly enumerating them, it meant , we will have 1st order logic for every possibility. this is compatible with all possible readings. first, st you select the order in which to incorporate the quantifiers. it's the same idea, except that you extract 2 first, st and then you do the one. , when you have a course. ,  I will, and I'll post this the answer to this on Ed. The under specified representation for every student took a course with these rules, and with the this rule for the transitive verb."
    ],
    "Topic 5": [
        "And last class, we started talking about the specifics of how this is done. we're gonna look at how in logic you have these universal and existential quantifiers, and how we can use them to model quantifiers and natural language. the Lambdas are there to help you figure out or to help you express that you're still missing information. And then, when you do more syntactic composition, then you combine more pieces of meaning representation together, and then lambda calculus will help you figure out exactly how you should combine the pieces of meaning representation. this is a predicate that eventually checks whether something is a student or not for the noun student. The question is , can I explain a little bit more of this event? , that it's a bit difficult to wrap your head around. And it's that it's it's of this type. Or even if you just have,  multiple events of the same type, then with the event variable version, it's much easier to deal with that. the formulas will get complicated. don't get freaked out by all of these symbols. But again, conceptually, it's exactly the same. You have to work through it and figure out that this is the form you need in order for everything to work out and be filled in the  place . You can do this at home to  again, to  work through each of the steps, and it looks complicated. You have lambda XX applied to Comp. the question is, does it matter? But the order of the Lambdas here. that does matter, and that you cannot exchange. And then the arguments is this thing. Yes, I do the simplification here. And then this thing applied to this thing. Take this thing as the arguments. 5, 50 is the arguments. 5, 50 ends up in the  place and ends up in the place for the enjoy. And all of these steps is applications of lambda calculus. But if you if you do that, then you'll derive this. There's a there's a separate step where you do the renaming. But if you want the same approach to work across multiple semantic phenomena, then you need it to be a little bit more complicated. ,  you mean, why this chunk ends up here? Comp, 5, 50 ends up in the position of enjoy. and then there's a second chunk for this whole thing. , that's what you would expect. it turns out that language is full of quantifiers. And  the ones that most clearly map onto logical quantifiers are these words  all and every which map to universal quantifiers. And then there are also existential quantifiers. the universal quantifier is almost always accompanied by this implication. logical implication, whereas the existential one is accompanied by the conjunction. Cause cause what happens if you have for all X student X and X likes com, 5, 50, what would that mean? 5, 50, not the not the instructors, and not the tas, and not  anything that's not a person, . , what about for the universal one? If you include parentheses  for all x. and then open the parentheses that X is a student. the question , ,  are you talking about all students or some student. I, , you can work through this. it's a universal only for , according to some condition which here is  all the students, that's the condition for existential. and it'll look very similar for the existential. It'll just be debt rewrites to sum. , but  the other major thing which it turns out, you can model with quantifiers. It might have been tricky, ? and then you're asserting that there is at most one thing being referred to who is a student. , yes, you have a question. on one of the metrics, there's an example where it's  the apple is in the yard. the question is, if you have, the apple is in the yard, what happens? because the yard is still participating in the predicate. It's just participating in a different position. It's not participating in the in  the semantic, . It's just it's participating in  the , more  the place position. But it's still participating in that predicate. You can come to ask me about this in office hours. for all y student Y implies y equals x, that's property. the question is when we say that there is at most one thing being referred to. And we are talking about and associating the  pieces of information with them. They it's all through word co-occurrences. if you're interested you can come and ask me about an office hours, and I'd be happy to chat about what are some other approaches to handling quantifiers and definiteness. Every we can do the same thing with all of the other quantifiers  A and B, ,  we can do. I also renamed the X to the Y before doing that. For all x lambda y state of y student of y applied to X implies Q of x. and then you further simplify, and you take the X and you plug it in where the Y is. what would be the semantic attachment for this and also for , what would this look ? It'll the beginning will look the same. we came up with it because Bertran Russell said   intuitively. And yes, in the back. How do we deal with that? Pnq,  the A is the existential. ,  let me say that this is what we're aiming for. ,  what we're aiming for is that we have lambda X student X's student. my question is, what is the semantic attachment for that. And we figure this out assuming that there's some other rule that combines nouns with adjectives. say, lamb, something  lambda X, and then specify that there is the existence of some X satisfy us. Can other people see the issue. And you're on the  track. There was some hand in the back. , in the back office. Fake by itself doesn't mean anything. Its definition relies one student as , exactly. Only when you're talking, saying, talking about a fake student. it's it's a real person. The person is not fake. it'll be something , they say they're a student. I want to talk about another common property of natural language, involving modification that is interesting, and it involves quantifiers. which is a scope, ambiguity. Can you help me with this one? You have  a lambda abstraction over it, and then you store the relevant information away  that you wait until you have,  some more information later on. ,  how does that work. And we're gonna say that s 1 and S 2 are, gonna be these  special here. But we won't capture  every possible explicit sentence. And then you do beta reduction. Then what you do is you retrieve thing from you, retrieve things from storage. which is the existential outscoping the universal. course still looks  what it does from before a still looks  what it did from before. Here is where you do the composition that we had from before, but before it was outside. But you can derive this yourself, work through and derive the representation. ,  if there are no more questions, we'll end there, and I'll see you at the midterm or in office hours."
    ]
}