There are other kinds of parsing. given a particular CFG and given a sentence made-up. The goal that we have is to recover all possible parses of the sentence. And the key to having an efficient parsing algorithm is to have an efficient search strategy that avoids redundant computation. CYK algorithm allows us to deal with ambiguity because you can store multiple things. It's unlikely you'll find a constituent if your grammar is reasonable. If you want to run the CYK algorithm exactly, there are no heuristics. If you create an Np constituent here. We already know that we won't use it, we're throwing that out. But if there are 2 possible tokens we can create. It's the exact same ideas as you've already looked at. It won't grow. Then you can use what we already know.