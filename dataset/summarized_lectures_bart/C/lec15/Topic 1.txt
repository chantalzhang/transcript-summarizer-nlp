Last class, remember, we were still talking about lexical semantics. In compositional semantics, what we to do is we to talk about, say the sentence level where sentences have meanings that you can derive by looking at the parts of the sentences. language is compositional, but it's also not perfectly compositional in particular idioms or expressions whose meanings cannot be predicted from their parts. We're going to be building up a 1st logic sentence as the as the meaning representation of the sentence by using fragments of logic in the subparts. We need to have some algorithm for constructing these logical formulas at the sentence level from the its parts. In order to do that, we need to use another tool from computer science and whatever. We'll use Lambda calculus to define a precise algorithm to do . is, we have to go back to Cfgs. and augment them with lambda expressions with the idea that every time you're doing a syntactic composition. You're also correspondingly doing some function application in Lambda calculus. The idea here is every terminal rule. you take those semantic attachments, and then afterwards is a mechanical process. of looking at your augmented Cfg with those semantic. attachments and then running those procedures. And then we needed lambda calculus to store these partial computations.